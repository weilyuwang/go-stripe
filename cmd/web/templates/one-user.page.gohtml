{{template "base" .}}

{{define "title"}}
  Admin User
{{end}}

{{define "content"}}
  <h2 class="mt-5">Admin User</h2>
  <hr>

  <form method="post" action="" name="user_form" id="user_form"
        class="needs-validation" autocomplete="off" novalidate="">

    <div class="mb-3">
      <label for="first_name" class="form-label">First Name</label>
      <input type="text" class="form-control" id="first_name" name="first_name"
             required="" autocomplete="first_name-new">
    </div>

    <div class="mb-3">
      <label for="last_name" class="form-label">Last Name</label>
      <input type="text" class="form-control" id="last_name" name="last_name"
             required="" autocomplete="last_name-new">
    </div>

    <div class="mb-3">
      <label for="email" class="form-label">Email</label>
      <input type="email" class="form-control" id="email" name="email"
             required="" autocomplete="email-new">
    </div>

    <div class="mb-3">
      <label for="password" class="form-label">Password</label>
      <input type="password" class="form-control" id="password" name="password"
             autocomplete="password-new">
    </div>

    <div class="mb-3">
      <label for="verify_password" class="form-label">Verify Password</label>
      <input type="password" class="form-control" id="verify_password" name="verify_password"
             autocomplete="verify_password-new">
    </div>

    <hr>

    <div class="float-start">
      <a class="btn btn-primary" href="javascript:void(0);" onclick="val()" id="saveBtn">Save Changes</a>
      <a class="btn btn-warning" href="/admin/all-users" id="cancelBtn">Cancel</a>
    </div>
    <div class="float-end">
      <a class="btn btn-danger d-none" href="javascript:void(0);" id="deleteBtn">Delete</a>
    </div>

    <div class="clearfix"></div>
  </form>


{{end}}

{{define "js"}}
  <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    let token = localStorage.getItem("token");
    let id = window.location.pathname.split("/").pop();
    let delBtn = document.getElementById("deleteBtn");

    // Load user info from DB is id !== 0
    document.addEventListener("DOMContentLoaded", function() {
      if (id !== "0") {
        if (id !== "{{.UserID}}") {
          // make sure you are not deleting yourself
          delBtn.classList.remove("d-none");
        }

        const requestOptions = {
          method: 'get',
          headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json',
            'Authorization': 'Bearer ' + token,
          }
        }

        fetch('{{.API}}/api/admin/users/' + id, requestOptions)
          .then(response => response.json())
          .then(function (data) {
            if (data) {
              document.getElementById("first_name").value = data.first_name;
              document.getElementById("last_name").value = data.last_name;
              document.getElementById("email").value = data.email;
            }
          })
      }
    })

    function val() {
      let form = document.getElementById("user_form");
      if (form.checkValidity() === false) {
        this.event.preventDefault();
        this.event.stopPropagation();
        form.classList.add("was-validated");
        return
      }
      form.classList.add("was-validated");

      if (document.getElementById("password").value !== document.getElementById("verify_password").value) {
        Swal.fire("Passwords do not match!");
        return
      }

      let payload = {
        id: parseInt(id, 10),
        first_name: document.getElementById("first_name").value,
        last_name: document.getElementById("last_name").value,
        email: document.getElementById("email").value,
        password: document.getElementById("password").value,
      }

      const requestOptions = {
        method: 'post',
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json',
          'Authorization': 'Bearer ' + token,
        },
        body: JSON.stringify(payload),
      }

      fetch("{{.API}}/api/admin/users/" + id, requestOptions)
        .then(response => response.json())
        .then(function(data){
          if (data.error) {
            Swal.fire("Error: " + data.message);
          } else {
            location.href = "/admin/all-users";
          }
        })
    }

    delBtn.addEventListener("click", function() {
      Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to undo this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Delete User'
      }).then((result) => {
        if (result.isConfirmed) {
          const requestOptions = {
            method: 'delete',
            headers: {
              'Accept': 'application/json',
              'Content-Type': 'application/json',
              'Authorization': 'Bearer ' + token,
            }
          }

          fetch("{{.API}}/api/admin/users/" + id, requestOptions)
            .then(response => response.json())
            .then(function(data){
              if (data.error) {
                Swal.fire("Error: " + data.message);
              } else {
                let jsonData = {
                  action: "deleteUser",
                  user_id: parseInt(id)
                }
                socket.send(JSON.stringify(jsonData))

                location.href="/admin/all-users";
              }
            })
        }
      })
    })
  </script>
{{end}}