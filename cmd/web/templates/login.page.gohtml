{{ template "base" .}}

{{define "title"}}
  Login
{{end}}

{{define "content"}}
  <div class="alert alert-danger text-center d-none" id="login-messages"></div>
  <form
    action=""
    method="post"
    name="login_form"
    id="login_form"
    class="d-block needs-validation charge-form"
    autocomplete="off"
    novalidate
  >
    <h3 class="mt-3 mb-3 text-center">Login</h3>
    <hr>
    <div class="mb-3">
      <label for="email" class="form-label">Email</label>
      <input type="email" class="form-control" id="email" name="email" required autocomplete="email-new">
    </div>
    <div class="mb-3">
      <label for="password" class="form-label">Password</label>
      <input type="password" class="form-control" id="password" name="password" required autocomplete="password-new">
    </div>
    <hr>
    <a href="javascript:void(0)" class="btn btn-primary" onclick="val()">Login</a>
  </form>
{{end}}

{{define "js"}}
  <script>
  let loginMessages = document.getElementById("login-messages")
  function showError(msg) {
    loginMessages.classList.add("alert-danger");
    loginMessages.classList.remove("alert-success");
    loginMessages.classList.remove("d-none");
    loginMessages.innerText = msg
  }

  function showSuccess() {
    loginMessages.classList.remove("alert-danger");
    loginMessages.classList.add("alert-success");
    loginMessages.classList.remove("d-none");
    loginMessages.innerText = "Login successful";
  }

  function val() {
    let form = document.getElementById("login_form");
    if (form.checkValidity() === false) {
      this.event.preventDefault();
      this.event.stopPropagation();
      form.classList.add("was-validated");
      return;
    }
    form.classList.add("was-validated");

    let payload = {
      email: document.getElementById("email").value,
      password: document.getElementById("password").value,
    }

    const requestOptions = {
      method: 'post',
      headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(payload),
    }

    fetch("{{.API}}/api/authenticate", requestOptions)
      .then(response => response.json())
      .then(response => {
        console.log(response);
        if(response.error) {
          showError(response.message);
        } else {
          localStorage.setItem("token", response.authentication_token.token)
          localStorage.setItem("token_expiry", response.authentication_token.expiry)
          showSuccess();
        }
      });
  }
  </script>
{{end}}